# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [main]
    tags:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest
    container: node:${{ matrix.node-version }}

    strategy:
      matrix:
        node-version: [12, 14, 15]

    services:
      redis:
        image: redis
        # wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      REDIS_URL: redis://redis:6379
      DISABLE_TELEMETRY: true

    steps:
    - uses: actions/checkout@v2
    - run: npm ci
      working-directory: quirrel
    - run: npm run build
      working-directory: quirrel
    - run: npm test -- --coverage
      working-directory: quirrel
    - name: Coveralls
      uses: coverallsapp/github-action@master
      if: ${{ matrix.node-version == 14 }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        base-path: quirrel
        path-to-lcov: quirrel/coverage/lcov.info

  dev-ui-test:
    name: Development UI Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: development-ui
    steps:
    - uses: actions/checkout@v2
    - uses: microsoft/playwright-github-action@v1
    - run: npm ci
    - run: npm run build
    - run: npm run start &
    - run: npm test

  push_to_registry:
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Push to GitHub Container Registry
        uses: docker/build-push-action@v1
        with:
          path: quirrel
          username: skn0tt
          password: ${{ secrets.GHCR_PAT }}
          registry: ghcr.io
          repository: quirrel-dev/quirrel
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

  deploy:
    name: Deploy to Fly
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions@1.1
        env:
          FLY_PROJECT_PATH: quirrel
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        with:
          args: "deploy"